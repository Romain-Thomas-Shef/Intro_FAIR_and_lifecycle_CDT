[
  {
    "objectID": "index.html#useful-information",
    "href": "index.html#useful-information",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Useful Information:",
    "text": "Useful Information:\n\n\n\nYou can follow the slides ➡️➡️ \nSlides are available freely on github.\nInterrupt me whenever you want. \nEvery blue text is a hyperlink"
  },
  {
    "objectID": "index.html#who-am-i",
    "href": "index.html#who-am-i",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Who am I?",
    "text": "Who am I?\n\nName : Romain Thomas\nRole : Head of Research Software Engineering\nPreviously : Staff Astronomer and Software Project manager at the Very Large Telescope (Chile)\nReleased/Published a few modules/software:\n\ndfitspy\nSPARTAN\nSCUBA"
  },
  {
    "objectID": "index.html#who-are-we-the-teams-behind-the-programme",
    "href": "index.html#who-are-we-the-teams-behind-the-programme",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Who are we? The teams behind the programme",
    "text": "Who are we? The teams behind the programme\nResearch Software Engineering\n\n\n\n\n\n\n\n\nThe Research Software Engineering team is composed of 13 members and collaborates with researchers across the University in building research software. Areas of expertise within the group include: general software development, code optimisation and performance, reproducibility, GPU computing and Deep Learning, High Performance Computing, training, etc…"
  },
  {
    "objectID": "index.html#who-are-we-the-teams-behind-the-programme-1",
    "href": "index.html#who-are-we-the-teams-behind-the-programme-1",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Who are we? The teams behind the programme",
    "text": "Who are we? The teams behind the programme\nData Analytics Service\n\n\n\n\nThe Data Analytics Service (IT Services) supports research excellence at the University of Sheffield by bridging technical and analytical gaps through consultation, delivering training, and long-term collaboration with research teams. DAS supports researchers with reproducible data analysis, data visualisation, data engineering, machine learning, statistics, big data, research software, web design, and much more."
  },
  {
    "objectID": "index.html#who-are-we-the-teams-behind-the-programme-2",
    "href": "index.html#who-are-we-the-teams-behind-the-programme-2",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Who are we? The teams behind the programme",
    "text": "Who are we? The teams behind the programme\nLibrary’s Scholarly Communications\n\n\n\n\nThe Library’s Scholarly Communications Team provides specialist services to support researchers at the University of Sheffield. They offer guidance on making your research outputs open access, and give support on good practice in research data management, copyright and licensing as well as open research more broadly."
  },
  {
    "objectID": "index.html#research-is-a-continuous-process",
    "href": "index.html#research-is-a-continuous-process",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Research is a continuous process",
    "text": "Research is a continuous process\n“The succession of researchers is comparable to a single person who learns indefinitely. Pascal, Pensee, French Mathematician, Physicist, inventor, philosopher and theologian [1623-1662] \n\nThat’s very old….\nBut still very valid…\nAnd becomes much more difficult with thecomplexity of modern research"
  },
  {
    "objectID": "index.html#research-creates-knowledgethat-is-passed-down",
    "href": "index.html#research-creates-knowledgethat-is-passed-down",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Research creates knowledge…that is passed down",
    "text": "Research creates knowledge…that is passed down\n“Knowledge is humankind’s most precious treasure. Everything that we accomplished has been done due to the capacity to create a transmissible heritage, which spares each new generation the task of starting from scratch.” B. Sirbey, le grand homme qui apprend.  \n\nIf we are doing the research we are doing today, it is thanks to the work of previous generations that created the knowledge that we are using now."
  },
  {
    "objectID": "index.html#and-that-can-be-trusted",
    "href": "index.html#and-that-can-be-trusted",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "And that can be trusted…",
    "text": "And that can be trusted…\n\n\n\nResearch relies on the ability to trust what has been done before.\nThis means that a result has been tested, verified and could be reproduced ➡️➡️\nTools and methods used for a particular result are known and shared…\n\n\n  The Turing Way project illustration by Scriberia. Used under a CC-BY 4.0 licence. DOI: 10.5281/zenodo.3332807"
  },
  {
    "objectID": "index.html#what-if-a-generation-of-researchers-stop-doing-this",
    "href": "index.html#what-if-a-generation-of-researchers-stop-doing-this",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "What if a generation of researchers stop doing this?",
    "text": "What if a generation of researchers stop doing this?\n\n\n\nTools and methods used for a particular results are NOT known and shared…\nThis means that a result can NOT be tested and verified and can NOT be reproduced.\n➡️ It is harder to trust research\n\n\n The Turing Way project illustration by Scriberia. Used under a CC-BY 4.0 licence. DOI: 10.5281/zenodo.3332807"
  },
  {
    "objectID": "index.html#are-we-far-from-reaching-this-situation",
    "href": "index.html#are-we-far-from-reaching-this-situation",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Are we far from reaching this situation?",
    "text": "Are we far from reaching this situation?\n\n\n\nSource: Baker M., Nature, 2016\n\n\n\n90% said there is a crisis!\nMore than 70% of researchers have tried and failed to reproduce another scientist’s experiments…\nAnd more than half have failed to reproduce their own experiments."
  },
  {
    "objectID": "index.html#lets-improve",
    "href": "index.html#lets-improve",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Let’s improve!",
    "text": "Let’s improve!\n\nSource: www.aalto.fi"
  },
  {
    "objectID": "index.html#lets-start-by-a-definition-what-is-a-software",
    "href": "index.html#lets-start-by-a-definition-what-is-a-software",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Let’s start by a definition: What is a software?",
    "text": "Let’s start by a definition: What is a software?\n  “Source code files, algorithms, scripts, computational workflows and executables that were created during the research process or for a research purpose.”\nBarker et al. Scientific Data 9:622 (2022) “Introducing the FAIR Principles for research software”"
  },
  {
    "objectID": "index.html#the-fair-principles",
    "href": "index.html#the-fair-principles",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "The FAIR principles",
    "text": "The FAIR principles\n\n\n The Turing Way project illustration by Scriberia. Used under a CC-BY 4.0 licence. DOI: 10.5281/zenodo.3332807\n\n A guideline for those wishing to enhance the reusability of their data holdings –Wilkinson et al. (2016)–"
  },
  {
    "objectID": "index.html#the-fair-principles-1",
    "href": "index.html#the-fair-principles-1",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "The FAIR principles",
    "text": "The FAIR principles\n “Many of the FAIR Guiding Principles can be directly applied to research software by treating software and data as similar digital research objects. However, specific characteristics of software — such as its executability, composite nature, and continuous evolution and versioning — make it necessary to revise and extend the principles.”\nChue Hong, Neil P. et al, FAIR Principles for Research Software (FAIR4RS Principles)"
  },
  {
    "objectID": "index.html#the-fair-principles-what-do-they-say",
    "href": "index.html#the-fair-principles-what-do-they-say",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "The FAIR principles: what do they say?",
    "text": "The FAIR principles: what do they say?\n\n\nFindable: Software, and its associated metadata, is easy for both humans and machines to find\nAccessible: Software, and its metadata, is retrievable via standardised protocols\n\nBarker et al. Scientific Data 9:622 (2022) “Introducing the FAIR Principles for research software” DOI: 10.1038/s41597-022-01710-x\n\nFINDABLE: Research software should have a globally unique and persistent identifier (e.g., DOI or a persistent URL) so that it can be easily found and cited. Sufficient metadata should be provided to help users discover the software. This includes descriptions of the software’s function, version information, authorship, and where to access it. The software and its metadata should be indexed in searchable repositories so it can be discovered via common search engines and research infrastructure platforms (e.g., Zenodo, GitHub, or institutional repositories).\nACCESSIBLE: The software should be easily retrievable using the unique identifier. Typically, this involves storing the software in a trusted repository that ensures long-term access. Clear information about the conditions under which the software can be accessed should be available, including open access options, if applicable. This ensures users understand whether they can freely use or adapt the software."
  },
  {
    "objectID": "index.html#the-fair-principles-what-do-they-say-1",
    "href": "index.html#the-fair-principles-what-do-they-say-1",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "The FAIR principles: what do they say?",
    "text": "The FAIR principles: what do they say?\n\n\nInteroperable: Software interoperates with other software by exchanging data and/or metadata, and/or through interaction via application programming interfaces (APIs), described through standards.\nReusable: Software is both usable (can be executed) and reusable (can be understood, modified, built upon, or incorporated into other software)\n\nBarker et al. Scientific Data 9:622 (2022) “Introducing the FAIR Principles for research software” DOI: 10.1038/s41597-022-01710-x\n\nINTEROPERABLE: The software should use standardized data formats and interfaces where possible, allowing it to work with other software, tools, or systems. Clear documentation should be provided so users know how to integrate the software with other tools or systems. Where possible, the software should implement and support established protocols, formats, and APIs that are widely adopted in the research community.\nREUSABLE: The software should be well-documented, including clear instructions on how to install, run, and modify it. The metadata should describe how and where the software can be reused, including dependencies, versioning, and requirements. An appropriate open or permissive license should be provided to ensure that others can legally reuse, modify, and redistribute the software. Adhering to coding standards, including the use of tests and continuous integration (CI), enhances the reliability and reusability of the software."
  },
  {
    "objectID": "index.html#universitys-position-about-fair",
    "href": "index.html#universitys-position-about-fair",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "University’s position about FAIR",
    "text": "University’s position about FAIR\n ‘‘We aspire to open research culture that values a diverse range of contributions and adheres to the FAIR principles to enable the results of our research to be of maximum benefit to society (findable, accessible, interoperable and reusable), whilst also respecting circumstances that limit data sharing (for example, due to issues of privacy, non-consent, contractual agreements, legislation or practicality).’’\nUniversity of Sheffield, Statement on Open Research  ‘‘All researchers, including postgraduate research students, have a personal responsibility to manage effectively the data they create….. All researchers are expected to document research data and software in line with the FAIR principles…..’’\nUniversity of Sheffield, Policy on good research and innovation practices"
  },
  {
    "objectID": "index.html#barriers-to-fair24rs",
    "href": "index.html#barriers-to-fair24rs",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Barriers to FAIR24RS",
    "text": "Barriers to FAIR24RS\n\n\n\nfear of prejudice\n\nimportant to create a positive culture\n\nfear of ‘theft’\n\nlicensing and citation\n\ntechnical and time barriers\n\nsupport is available!\nonly need to learn once\n\nnon-commercialisable?\n\nopen source and commercialisation are compatible\ngreater impact through open source\n\n\n\n Better Science through Better Data 2017) scribe images."
  },
  {
    "objectID": "index.html#benefits-of-fair24rs",
    "href": "index.html#benefits-of-fair24rs",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Benefits of FAIR24RS",
    "text": "Benefits of FAIR24RS\n\n\n Better Science through Better Data 2017) scribe images.\n\n\nAccelerate research\nIncrease transparency of research\nIncrease visibility, citation, reputation and impact\nReduce duplication of effort"
  },
  {
    "objectID": "index.html#how-to-be-fair",
    "href": "index.html#how-to-be-fair",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "How to be FAIR?",
    "text": "How to be FAIR?"
  },
  {
    "objectID": "index.html#fair4rs-think-about-how-you-are-coding",
    "href": "index.html#fair4rs-think-about-how-you-are-coding",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Think about how you are coding…",
    "text": "FAIR4RS: Think about how you are coding…\n\n\n\nWhere possible, make your code modular.\nComment your code to make it as clear as possible.\nCreate and provide tests that others can use.\nFollow code standards"
  },
  {
    "objectID": "index.html#fair4rs-be-open-even-inside-the-code",
    "href": "index.html#fair4rs-be-open-even-inside-the-code",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Be open even inside the code!",
    "text": "FAIR4RS: Be open even inside the code!\n\n\n\nWhere possible and applicable, outputs (even between pieces of code) should use open and accessible data formats, which will help if other researchers only wish to use part of your code.\nBut do NOT reinvent the wheel! In some research fields data format are standardized ➡️ if you want people to use your code, use [your] community standards!"
  },
  {
    "objectID": "index.html#fair4rs-version-your-code",
    "href": "index.html#fair4rs-version-your-code",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Version your code!",
    "text": "FAIR4RS: Version your code!\n\n\n\nUsing version control software platform such as Github/GitLab allows you to keep track of the changes you make to your code\nYou can release version of your software/code/scripts directly from Github. While it should not be used a long term storage place, It gives a place where your code can be downloaded and where people can contribute.\n\n\n  https://www.sheffield.ac.uk/library/research-data-management/repositories"
  },
  {
    "objectID": "index.html#fair4rs-document-your-code",
    "href": "index.html#fair4rs-document-your-code",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Document your code!",
    "text": "FAIR4RS: Document your code!\n\n\n\nA little poem from A beginner’s guide to writing documentation:\n\nIf people don’t know why your project exists, they won’t use it.\nIf people can’t figure out how to install your code, they won’t use it.\nIf people can’t figure out how to use your code, they won’t use it."
  },
  {
    "objectID": "index.html#fair4rs-document-your-code-1",
    "href": "index.html#fair4rs-document-your-code-1",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Document your code!",
    "text": "FAIR4RS: Document your code!\n\n\n\nA little poem from A beginner’s guide to writing documentation:\n\nIf people don’t know why your project exists, they won’t use it.\nIf people can’t figure out how to install your code, they won’t use it.\nIf people can’t figure out how to use your code, they won’t use it.\n\nIn practice, Github can host documentation as website (and it is very easy to do!) ➡️➡️"
  },
  {
    "objectID": "index.html#fair4rs-licence-your-code",
    "href": "index.html#fair4rs-licence-your-code",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Licence your code!",
    "text": "FAIR4RS: Licence your code!\n\n\nYou need to tell people how they can re-use your code.\n\nGPLv3 The GNU General Public License: a free, copyleft license for software and other kinds of works. It is intended to guarantee your freedom to share and change all versions of a software to make sure it remains free software for all its users\nMIT licence: is a permissive free software license. Without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,\n\n\n \nThe licence must be made clear in the code repository and in the documentation."
  },
  {
    "objectID": "index.html#fair4rs-get-credit-for-your-work",
    "href": "index.html#fair4rs-get-credit-for-your-work",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Get credit for your work",
    "text": "FAIR4RS: Get credit for your work\nIf people are using your software you should get credit for it.\n➡️ state how you want to be credited. You can add it in the documentation and/or create a citation.cff file that you can add with your code (tools. are available to generate them)"
  },
  {
    "objectID": "index.html#fair4rs-share-it",
    "href": "index.html#fair4rs-share-it",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Share it!",
    "text": "FAIR4RS: Share it!\n\n\n\nCreate a description of your code with metadata [data about your software].\nCodemeta is a set of keywords used to describe code and how to structure them in a machine readable way\n\nExamples:\n\nThe citation.cff file contains metadata\nDescription keywords\nUrl to repository, to documentation\nList of contributors and affiliations\netc…"
  },
  {
    "objectID": "index.html#fair4rs-share-it-1",
    "href": "index.html#fair4rs-share-it-1",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Share it!",
    "text": "FAIR4RS: Share it!\n\n\n In order to ensure that others can access and download your code, and that this access remains permanent over time, you should deposit your code in a repository. Two types:\n\nGeneral purpose\nDomain Specific\n\n Choose what makes more sense for you project!"
  },
  {
    "objectID": "index.html#fair4rs-share-it-2",
    "href": "index.html#fair4rs-share-it-2",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Share it!",
    "text": "FAIR4RS: Share it!\n\n\n In order to ensure that others can access and download your code, and that this access remains permanent over time, you should deposit your code in a repository. Two types:\n\nGeneral purpose\nDomain Specific\n\nChoose what makes more sense for you project!\n\n\nNumerous repositories give your content a DOI [Digital Object Identifier] It means it can be cited in publication and other communications in order to open up your research to others and invite collaboration, as well as ensuring a constant link to your code."
  },
  {
    "objectID": "index.html#fair4rs-publish-it",
    "href": "index.html#fair4rs-publish-it",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "FAIR4RS: Publish it!",
    "text": "FAIR4RS: Publish it!\n\n\n\n\nGeneralist software journals\n\nJOSS: Journal of Open Source Software: Academic journal with a formal peer review process that is designed to improve the quality of the software submitted. \nJORS: Journal of Open Research Software:  Features peer reviewed Software Metapapers describing research software with high reuse potential. \nSoftware Impacts: multidisciplinary, open access, peer-reviewed journal which publishes short, articles that describe software which addresses a research challenge. \n\n\n\n\nSome are domain specific:\n\nAstronomy and computing\nJournal of Artificial Societies and Social Simulation\nJournal of Statistical Software\nScience of Computer Programming\nComputer Methods and Programs in Biomedicine\n\n\n\nYou can find a list of potential journals here"
  },
  {
    "objectID": "index.html#lack-of-skills-for-developing-software",
    "href": "index.html#lack-of-skills-for-developing-software",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Lack of skills for developing software",
    "text": "Lack of skills for developing software\n\n\n Do you feel that you have received sufficient training to develop reliable software?\nBob Turner & Paul Richmond, UoS, RSE team, github.com/RSE-Sheffield/sssurvey."
  },
  {
    "objectID": "index.html#the-fair24rs-programme-overview",
    "href": "index.html#the-fair24rs-programme-overview",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "The FAIR24RS Programme: Overview",
    "text": "The FAIR24RS Programme: Overview"
  },
  {
    "objectID": "index.html#software-lifecycle-planning",
    "href": "index.html#software-lifecycle-planning",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Software Lifecycle Planning",
    "text": "Software Lifecycle Planning\n\n\n Who: R Thomas, R. Campbell, K. O’Neill\nWhen/Length: November 8th / 2.5h (afternoon)\nFormat: Online\n\n\n\nAbstract:\n\nWhen you start writing software it is often very useful to think about the development process and how you will make your software sustainable in the long term. In this module we will introduce important aspects of software development in research: software management plan, licences and dissemination. This module should allow you to ask yourself the right questions when starting a research software project."
  },
  {
    "objectID": "index.html#version-control-git-github-and-gitkraken---from-zero-to-hero",
    "href": "index.html#version-control-git-github-and-gitkraken---from-zero-to-hero",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Version control: Git, GitHub and GitKraken - From Zero to Hero",
    "text": "Version control: Git, GitHub and GitKraken - From Zero to Hero\n\n\n\nWho: Neil Shephard\nWhen/Length: 18/19 November (2 half days). Another session in February\nFormat: In person\n\n\n\nAbstract:\n\nIf you’ve never heard of or used version control and Git before this is the course for you. We start by introducing version control and exploring how it can be beneficial to researchers, then we introduce some useful tools and get started with some basic workflow using these tools. We build on those foundations with collaborative exercises that introduce key concepts such as forks, pull requests and branches and give you the chance to get some hands-on experience with using version control in a research setting."
  },
  {
    "objectID": "index.html#advanced-version-control-git-collaboration",
    "href": "index.html#advanced-version-control-git-collaboration",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "[Advanced] Version control: Git collaboration",
    "text": "[Advanced] Version control: Git collaboration\n\n\n Who: Neil Shephard\nWhen/Length: February\nFormat: In person\n\n\n\nAbstract:\n\nThis course aims to help you develop a deeper understanding of how Git works to facilitate collaboration. It builds on foundations laid by the Git beginners course. The core idea around the course is that by improving your understanding of working with branches and how to make your commits tidier and neater it makes it easier to understand pull requests and Git history which in turn makes it easier to collaborate and work on code with others (including your future self!)."
  },
  {
    "objectID": "index.html#design-your-code-and-write-less-of-it",
    "href": "index.html#design-your-code-and-write-less-of-it",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Design your code (and write less of it)",
    "text": "Design your code (and write less of it)\n\n\n Who: R. Thomas\nWhen/Length: 12/13 December (2 half days)\nFormat: In person\n\n\n\nAbstract:\n\nThe way you write your code will have a massive impact on how easy it is to maintain in the long run. This course on Code Design introduces essential principles and best practices for writing clean and maintainable code. We will learn how we can write clean code, adhering to naming conventions, commenting, and following PEP 8 guidelines. We will then explore some fundamental principles such as DRY, KISS or YAGNI that are important to keep in mind when writing new code and see how we can spend less time touching the code by introducing configuration files and command line interface."
  },
  {
    "objectID": "index.html#code-testing",
    "href": "index.html#code-testing",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Code Testing",
    "text": "Code Testing\n\n\n Who: Sylvia Whittle\nWhen/Length: January (half day)\nFormat: In person\n\n\n\nAbstract:\n\nDoes your code work? Are you sure? How do you ensure that it keeps working when you change it? Manually verifying is slow and tedious. Why not automate it? Software testing checks that your code works for you, and when it breaks, it can show you exactly where it broke, without you having to trawl through hundreds of lines of code manually.This course aims to provide you with the tools you need to start automatically ensuring the reliability of your code."
  },
  {
    "objectID": "index.html#documentation",
    "href": "index.html#documentation",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Documentation",
    "text": "Documentation\n\n\n Who: Joe Heffer\nWhen/Length: February (half day)\nFormat: In person\n\n\n Abstract:\nWell-documented software promotes reproducibility, maintainability, and increased research impact through wider adoption and citation. This course teaches researchers how to document their software effectively, making it accessible and understandable to others. It covers topics such as writing readable code and usage instructions."
  },
  {
    "objectID": "index.html#reproducible-environments",
    "href": "index.html#reproducible-environments",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Reproducible Environments",
    "text": "Reproducible Environments\n\n\n Who: Dan Brady\nWhen/Length: March [half day]\nFormat: In person\n\n\n Abstract:\nEnsuring that others are able to take your code, run it, and are able to produce the same (or equivalent) results is one of the key tenets of FAIR and reproducible research software. This course will provide you with an overview of different ways to make your code reproducible and then focus on virtual environments as a specific tool for computational reproducibility."
  },
  {
    "objectID": "index.html#packaging",
    "href": "index.html#packaging",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Packaging",
    "text": "Packaging\n\n\n Who: Chris Wild and Farhad Allian\nWhen/Length: April [half day]\nFormat: In person\n\n\n Abstract:\nPackaging your software is one of the most important steps in a software project to make it both findable and accessible. This course will provide you with an understanding of why and when packaging is useful, what different standards exist to package Python projects and take you through each step of the packaging process."
  },
  {
    "objectID": "index.html#software-papers",
    "href": "index.html#software-papers",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Software Papers",
    "text": "Software Papers\n\n\n Who: Romain Thomas & Arfon Smith\nWhen/Length: April, 1.5h\nFormat: Online\n\n\n\nAbstract:\n\nDid you know that you can actually publish a paper about your software? This is an ideal way to get recognition (and citation) for the software you have spent countless hours creating. In this course we will walk you through an example of submission in the Journal of Open Source Software. We will make an example software submission to the journal, and thanks to the collaboration of the Editor in Chief of JOSS (Arfon Smith), we will look at how the review process is done."
  },
  {
    "objectID": "index.html#end-to-end-demo",
    "href": "index.html#end-to-end-demo",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "End-to-End demo",
    "text": "End-to-End demo\n\n\n Who: Romain Thomas\nWhen/Length: April, 1.5h\nFormat: Online\n\n\n Abstract:\nOn a short demonstration, we will attempt to review the main points of the training program, from code design and version control, to testing, documentation and packaging of a short demo software."
  },
  {
    "objectID": "index.html#the-fair24rs-programme-timeline",
    "href": "index.html#the-fair24rs-programme-timeline",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "The FAIR24RS Programme: Timeline",
    "text": "The FAIR24RS Programme: Timeline"
  },
  {
    "objectID": "index.html#the-fair24rs-programme-material-and-dependencies",
    "href": "index.html#the-fair24rs-programme-material-and-dependencies",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "The FAIR24RS Programme: Material and dependencies",
    "text": "The FAIR24RS Programme: Material and dependencies\n\n\n\n\nAll materials are designed using the same structure (Software Carpentry workbench) and are freely accessible on Github.\nYou can pick-and-choose the lecture you will follow based on the skills you already have. Each lecture comes with a set of prerequisities that are clearly identified.\nA feedback form will be provided after each lecture."
  },
  {
    "objectID": "index.html#the-fair24rs-programme-important-notes",
    "href": "index.html#the-fair24rs-programme-important-notes",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "the fair24rs programme: important notes",
    "text": "the fair24rs programme: important notes\n\n\n\n\nTraining are all Free of charge.\n\nBUT! they all need registration and in-person sessions have limited places!\nThey will all be available on mydevelopment platform. The first 3 sessions are already open for registration:\n\nSoftware Management plan - Nov 8th\nGit/Github zero to Hero - Nov 18th/19th\nCode Design - Dec 12th/13th\n\nJanuary onward sessions will be available for booking around December.\n\n\n\n\n\nDirect links are also available on the RSE website:"
  },
  {
    "objectID": "index.html#rse-website",
    "href": "index.html#rse-website",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "RSE website",
    "text": "RSE website\n\n Contacts:\n\nTamora James -RSE and FAIR24RS Programme Manager -(t.d.james@sheffield.ac.uk)\nRomain Thomas -Head of RSE-(romain.thomas@sheffield.ac.uk)"
  },
  {
    "objectID": "index.html#acknowledgements-references",
    "href": "index.html#acknowledgements-references",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Acknowledgements & References",
    "text": "Acknowledgements & References\n\nThank you to Tamora James for leading the development of this training programme\nThank you to Christopher Wild, Ric Campbell, Farhad Allian, Daniel Brady, Kate O’neill, Joe Heffer, Jenni Adams, Neil Shephard, Sylvia Wittle and Arfon Smith for dedicating time to prepare all the material!\n\nReferences * D. Wilby Lunchbyte talk on the FAIR principles * T. James, FAIR for research software, Talk OpenFest 2024 * The Turing Way * B. Sirvey Le grand homme qui apprend * Chue Hong, Neil P. et al, FAIR principles for Research Software"
  },
  {
    "objectID": "index.html#thank-you",
    "href": "index.html#thank-you",
    "title": "-Better software for Better research-Introduction to the FAIR2 principles for Research Software",
    "section": "Thank you!",
    "text": "Thank you!\n\n\n\n\n\n\n\n\n\nHelp us improve!\nScan to give your feedback!"
  }
]